{
  "openapi": "3.0.4",
  "info": {
    "title": "Buildstash API",
    "description": "API for uploading files to Buildstash, supporting both single part uploads and multipart uploads for large files (>5GB)",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.buildstash.com/api/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/upload/request": {
      "post": {
        "summary": "Request Upload",
        "description": "Initiate a file upload by requesting presigned URLs. For files larger than 5GB, this will return multipart upload information.",
        "requestBody": {
          "description": "Upload request details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Upload request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/upload/request/multipart": {
      "post": {
        "summary": "Request Multipart Upload Part",
        "description": "Request a presigned URL for a specific part of a multipart upload. Used for files larger than 5GB.",
        "requestBody": {
          "description": "Multipart upload part request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipartRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Multipart upload part request successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultipartResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/upload/verify": {
      "post": {
        "summary": "Verify Upload",
        "description": "Verify that all parts of an upload have been successfully uploaded and complete the upload process.",
        "requestBody": {
          "description": "Upload verification request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Upload verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UploadRequest": {
        "type": "object",
        "required": ["structure", "primary_file", "version_component_1_major", "version_component_2_minor", "version_component_3_patch", "source", "platform", "stream"],
        "properties": {
          "structure": {
            "type": "string",
            "description": "Upload structure type. Should use 'file' unless you're including an Android OBB expansion file",
            "enum": ["file", "file+expansion"]
          },
          "platform": {
            "type": "string",
            "description": "Platform identifier"
          },
          "stream": {
            "type": "string",
            "description": "Stream information"
          },
          "source": {
            "type": "string",
            "description": "Source of the upload (e.g. cli-upload, ghactions, jenkins, etc)"
          },
          "primary_file": {
            "$ref": "#/components/schemas/PrimaryFileInfo"
          },
          "expansion_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpansionFileInfo"
            },
            "description": "Expansion files (only include if structure is 'file+expansion')"
          },
          "version_component_1_major": {
            "type": "string",
            "description": "Semantic versioning: Major version component"
          },
          "version_component_2_minor": {
            "type": "string",
            "description": "Minor version component"
          },
          "version_component_3_patch": {
            "type": "string",
            "description": "Patch version component"
          },
          "version_component_extra": {
            "type": "string",
            "description": "Extra version component. Optional pre-release label like such as 'alpha', 'beta', 'rc', etc"
          },
          "version_component_meta": {
            "type": "string",
            "description": "Version metadata. Optional metadata like such as 'build number', 'commit hash', etc",
            "example": "2025.07.30"
          },
          "custom_build_number": {
            "type": "string",
            "description": "Custom build number (any preferred format)"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Labels for the build (will be created if they don't already exist)"
          },
          "architectures": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Architectures this build supports (the platform must also support the architecture)"
          },
          "ci_pipeline": {
            "type": "string",
            "description": "CI pipeline name"
          },
          "ci_run_id": {
            "type": "string",
            "description": "CI run ID"
          },
          "ci_run_url": {
            "type": "string",
            "description": "CI run URL"
          },
          "ci_build_duration": {
            "type": "string",
            "description": "CI build duration"
          },
          "vc_host_type": {
            "type": "string",
            "description": "Version control host type"
          },
          "vc_host": {
            "type": "string",
            "description": "Version control host"
          },
          "vc_repo_name": {
            "type": "string",
            "description": "Repository name"
          },
          "vc_repo_url": {
            "type": "string",
            "description": "Repository URL"
          },
          "vc_branch": {
            "type": "string",
            "description": "Branch name"
          },
          "vc_commit_sha": {
            "type": "string",
            "description": "Commit SHA"
          },
          "vc_commit_url": {
            "type": "string",
            "description": "Commit URL"
          },
          "notes": {
            "type": "string",
            "description": "Additional notes"
          }
        }
      },
      "PrimaryFileInfo": {
        "type": "object",
        "required": ["filename", "size_bytes"],
        "properties": {
          "filename": {
            "type": "string",
            "description": "Filename with extension (excluding path)"
          },
          "size_bytes": {
            "type": "integer",
            "description": "Size of the file in bytes"
          }
        }
      },
      "ExpansionFileInfo": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "Filename with extension (excluding path)"
          },
          "size_bytes": {
            "type": "integer",
            "description": "Size of the file in bytes"
          }
        }
      },
      "UploadResponse": {
        "type": "object",
        "properties": {
          "pending_upload_id": {
            "type": "string",
            "description": "Unique identifier for the pending upload"
          },
          "primary_file": {
            "$ref": "#/components/schemas/UploadFileInfo"
          },
          "expansion_files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadFileInfo"
            }
          }
        }
      },
      "UploadFileInfo": {
        "type": "object",
        "properties": {
          "chunked_upload": {
            "type": "boolean",
            "description": "Whether this file requires chunked upload"
          },
          "chunked_number_parts": {
            "type": "integer",
            "description": "Number of parts for chunked upload"
          },
          "chunked_part_size_mb": {
            "type": "integer",
            "description": "Size of each part in MB"
          },
          "presigned_data": {
            "$ref": "#/components/schemas/PresignedData"
          }
        }
      },
      "PresignedData": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Presigned URL for upload"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              },
              "Content-Length": {
                "type": "string"
              },
              "Content-Disposition": {
                "type": "string"
              }
            }
          }
        }
      },
      "MultipartRequest": {
        "type": "object",
        "required": ["pending_upload_id", "part_number", "content_length"],
        "properties": {
          "pending_upload_id": {
            "type": "string",
            "description": "Pending upload ID from the initial request"
          },
          "part_number": {
            "type": "integer",
            "description": "Part number (1-based)"
          },
          "content_length": {
            "type": "integer",
            "description": "Size of this part in bytes"
          }
        }
      },
      "MultipartResponse": {
        "type": "object",
        "properties": {
          "part_presigned_url": {
            "type": "string",
            "description": "Presigned URL for uploading this part"
          }
        }
      },
      "VerifyRequest": {
        "type": "object",
        "required": ["pending_upload_id"],
        "properties": {
          "pending_upload_id": {
            "type": "string",
            "description": "Pending upload ID from the initial request"
          },
          "multipart_chunks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultipartChunk"
            },
            "description": "Array of uploaded parts (required for multipart uploads)"
          }
        }
      },
      "MultipartChunk": {
        "type": "object",
        "required": ["PartNumber", "ETag"],
        "properties": {
          "PartNumber": {
            "type": "integer",
            "description": "Part number (1-based)"
          },
          "ETag": {
            "type": "string",
            "description": "ETag returned from the upload of this part"
          }
        }
      },
      "VerifyResponse": {
        "type": "object",
        "properties": {
          "build_id": {
            "type": "string",
            "description": "Unique identifier for the completed build"
          },
          "pending_processing": {
            "type": "boolean",
            "description": "Whether the build is still being processed"
          },
          "build_info_url": {
            "type": "string",
            "description": "URL to view build information"
          },
          "download_url": {
            "type": "string",
            "description": "URL to download the uploaded file"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error type"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "App-specific access token. Bearer authentication header of the form Bearer <token>, where <token> is your auth token."
      }
    }
  }
}